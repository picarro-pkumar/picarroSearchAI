{
  "id": "bd9f7e35-48db-47e1-9ec4-8c6aa93175ec",
  "title": "timezone API endpoint",
  "messages": [
    {
      "id": "1754073270282",
      "content": "timezone API endpoint",
      "role": "user",
      "timestamp": "2025-08-01 18:34:30.282000+00:00",
      "sources": null,
      "isTyping": false
    },
    {
      "id": "1754073282531",
      "content": "The timezone API endpoint includes:\n\n* The API response should include the timezone **name** with its **abbreviation**.\n* The endpoint is a **GET** request to **/v1/timezones**\n* The response will be sorted by country names\n* The response format is:\n\\[ \\{ \"name\": \"Asia/Kolkata\", \"abbreviation\" : \"IST\" \\}, \\{ \"name\": \"America/New_York\", \"abbreviation\" : \"EDT\" \\}, \\{ \"name\": \"Europe/London\", \"abbreviation\" : \"BST\" \\}, \\{ \"name\": \"America/Araguaina\", \"abbreviation\": \"-03\" \\} // ... all pytz timezones \\]",
      "role": "assistant",
      "timestamp": "2025-08-01 18:34:42.530000+00:00",
      "sources": [
        {
          "content": "arameters: None Response: \\[ \\{ \"code\": \"US\", \"name\": \"United States\" \\}, \\{ \"code\": \"IN\", \"name\": \"India\" \\}, \\{ \"code\": \"DE\", \"name\": \"Germany\" \\} // ... all ISO 3166-1 countries \\] \\`\\`\\` **\n## 2\\. Timezone List\n * The API response should include the timezone **name** with its **abbreviation**.\n * **Note:** Abbreviations are not standardized and may lead to ambiguity. \nFor example:\n * \\`Asia/Kolkata\\` and \\`Europe/Dublin\\` both use the abbreviation \\`IST\\`.\n * \\`Asia/Kuwait\\` has abbreviation \\`+03\\`.\n * Despite the potential ambiguity, these values will be included as requested\n * Link : <https://en.wikipedia.org/wiki/List_of_tz_database_time_zones>\n\n\\`\\`\\` Method: **GET** Endpoint: **/v1/timezones Description: Get the list of standard timezones \\(based on pytz\\). Query parameters: None Response: \\[ \\{ \"name\": \"Asia/Kolkata\", \"abbreviation\" : \"IST\" \\}, \\{ \"name\": \"America/New\\_York\", \"abbreviation\" : \"EDT\" \\}, \\{ \"name\": \"Europe/London\", \"abbreviation\" : \"BST\" \\}, \\{ \"name\": \"Ameri",
          "similarity_score": 0.7315404942886583,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 42,
            "chunk_size": 1000,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "e Alert Configuration\n\\`\\`\\` jsonMethod: **PATCH** Endpoint: **/v1/alert-config/\\{alert\\_config\\_id\\} Request Body: \\{ \"alertThresholdPercentage\": \"float\", \"status\": \"int\" // 0 is disabled, 1 is enabled \\} Response: Successful Update \\(200 OK\\) \\{ \"id\": \"abc123\", //alert config uuid \"message\": \"Alert Config updated successfully.\" \\} Error Handling: 400 Bad Request: Invalid input data. 404 Not Found: Alert configuration not found. 500 Internal Server Error: Internal Server Error \\`\\`\\` **\n# Country and Timezone API Contract\n## 1\\. Country List\n\\`\\`\\` jsonMethod: **GET** Endpoint: **/v1/countries Description: Get the list of ISO standard country codes and names. The response is sorted by country names. Query parameters: None Response: \\[ \\{ \"code\": \"US\", \"name\": \"United States\" \\}, \\{ \"code\": \"IN\", \"name\": \"India\" \\}, \\{ \"code\": \"DE\", \"name\": \"Germany\" \\} // ... all ISO 3166-1 countries \\] \\`\\`\\` **\n## 2\\.",
          "similarity_score": 0.4539066952347368,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 41,
            "chunk_size": 917,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "e Response: \\[ \\{ \"name\": \"Asia/Kolkata\", \"abbreviation\" : \"IST\" \\}, \\{ \"name\": \"America/New\\_York\", \"abbreviation\" : \"EDT\" \\}, \\{ \"name\": \"Europe/London\", \"abbreviation\" : \"BST\" \\}, \\{ \"name\": \"America/Araguaina\", \"abbreviation\": \"-03\" \\} // ... all pytz timezones \\] \\`\\`\\` **\n* * *\n# Calendar Events API\n## Recurrence Pattern Summary\n| Pattern Type | Key Parameters | Use Cases | | --- | --- | --- | | Daily | interval | Every day, every 2 days, etc. | | Weekly | interval\\`byWeekDay\\` | Weekly meetings, bi-weekly events on specific days | | Monthly | interval\\`byMonthDay\\` or \\`byWeekDay\\`\\`bySetPos\\` | Monthly reviews, first Monday of month | | Yearly | interval\\`byMonth\\`, \\`byMonthDay\\` or \\`byWeekDay\\`\\`bySetPos\\` | Anniversaries, annual events | \n## Parameters Reference\n| Parameter | Type | Description | Example | | --- | --- | --- | --- | | \\`type\\` | String | Recurrence frequency \\(daily, weekly, monthly, yearly\\) | \"weekly\" | | interval | Integer | How often the pattern repeats",
          "similarity_score": 0.37020923602811673,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 43,
            "chunk_size": 999,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "ring\" \\} Response: Status: 201 Created \\{ \"id\": \"uuid string\", \"name\": \"string\", \"createdDate\": \"date\", //epoch in milliseconds \"updatedDate\": \"date\", //epoch in milliseconds \"description\": \"string\", \"hardwareSerialNo\": \"string\", \"siteProgramId\": \"uuid string\", \"latitude\": \"string\", // datatype yet to decide? \"longitude\": \"string\", \"monitoringSystemTypeId\": \"uuid string\", \"status\": 1 // 0 -> not active, 1 -> active \\} \\`\\`\\` **\n## 2\\. Get all Monitoring Systems\nUse the Get single Site API to get all monitoring systems for a Site. There is no pagination for this API.\n## 3\\. Get a Single Monitoring System\n\\`\\`\\` Method: **GET** Endpoint: **/v1/monitoring-system/\\{monitoring-system-id\\} Response: Status: 200 OK \\{ \"id\": \"uuid string\", \"name\": \"string\", \"createdDate\": \"date\", //epoch in milliseconds \"updatedDate\": \"date\", //epoch in milliseconds \"description\": \"string\", \"hardwareSerialNo\": \"string\", \"siteProgramId\": \"uuid string\", \"latitude\": \"string\", // datatype yet to decide? \"longitude",
          "similarity_score": 0.3520214226362095,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 25,
            "chunk_size": 1000,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "updatedDate\": \"date\", //epoch in milliseconds \"status\": 1 //0 - non-active, 1-is active \\} \\`\\`\\` **\n## 4\\. Calendar Event Update API\n### 1\\. Update Calendar Event \nUpdates a calendar event's details. For recurring events, this updates the entire series. For converting a one-time event to recurring, include the \\`rRuleStr\\` field.\n\\`\\`\\` Method: **P**atch Endpoint: **/v1/calendar-events/\\{event\\_id\\} Request Body \\{ \"name\": \"Updated Meeting Name\", // Optional \"startDateTime\": 1709251200000, // Optional \"endDateTime\": 1709254800000, // Optional \"importance\": 0, // Optional \"rRuleStr\": \"DTSTART:20250605T000000\\nRRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,WE,FR\" // Optional, include to convert to recurring \\} \\`\\`\\` **\n### Examples\n#### 1\\. Update a One-Time Event\n\\`\\`\\` \\{ \"name\": \"Updated One-Time Meeting\", \"startDateTime\": 1709251200000, \"endDateTime\": 1709254800000 \\} \\`\\`\\` \n#### 2\\. Update an Entire Recurring Series\n\\`\\`\\` \\{ \"name\": \"Weekly Team Standup\", \"rRuleStr\": \"DTSTART:20250605T00",
          "similarity_score": 0.34517374110583154,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 55,
            "chunk_size": 1000,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "minutes \n\n\\`\\`\\` none \\`\\`\\` \n## Overview\nThis document provides a detailed definition of the <http://Socket.IO> and API contract between the Active Monitoring Dashboard and the backend Relay Service. It outlines the communication protocols, data structures, and interactions that ensure seamless integration and data exchange between the frontend dashboard and the backend service, including the expected request and response formats, error handling mechanisms, and any specific rules governing the transmission of information.\n## API\n### **Get Latest Telemetry Info for Active Monitoring Dashboard**\nEndpoint: **\\`/v1/telemetry/latest\\`**\nMethod: \\`GET\\`\nDescription: Get Latest Telemetry Info for Active Monitoring Dashboard By Site Program Id\n**Parameters:**\n * \\`siteProgramId\\` \\(query parameter, required\\): \n * Type: UUID\n * Description: Unique identifiers of the site program.\n\n**Responses:**\n * **200 OK**\n * Content-Type: application/json\n\n**Schema:**\n\\`\\`\\` \\{ \"siteProgramId\": \"fd53de65-",
          "similarity_score": 0.34453140707738883,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 14,
            "chunk_size": 1000,
            "content_length": 16031,
            "created_date": "2025-07-25T13:08:52.035Z",
            "document_id": "confluence_3778248705",
            "is_chunk": true,
            "last_modified": "2025-07-25T13:53:04.384Z",
            "page_id": "3778248705",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3778248705",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Detaila about active monitoring",
            "version": "1"
          }
        },
        {
          "content": "\\`\\`\\` none \\`\\`\\` \n* * *\n# [Guidelines for API definitions and format](https://picarro.atlassian.net/wiki/spaces/FC/pages/edit-v2/3087827169#Guidelines-for-API-definitions-and-format)\n* * *\n# Tenant API Contract\n## 1\\. Create Tenants\nCurrently the logo upload is optional, the response will have \\`logoUrl\\` as null\n * country field should be a valid country alpha-2 code like \u2018US', 'IN\u2019. Refer API get countries api\n * If the country is 'US' then county field is mandatory in address\\(for tenant as well as for site address\\)\n * If you pass county for countries other then 'US', the county field will be ignored and default to None in database.\n\n\\`\\`\\` Method: **POST** PATH: **v1/tenant Request body: \\{ \"name\": \"string\", \"address\": \\[ \\{ \"name\": \"string\", \"addressLine1\": \"string\", \"addressLine2\": \"string\", \"city\": \"string\", \"state\": \"string\", \"country\": \"string\", \"county\" : \"string\", //mandatory when country='US' \"postalCode\": \"string\" \\} \\], \"contact\": \\[ \\{ \"firstName\": \"string\", \"lastName",
          "similarity_score": 0.3396980136609884,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 0,
            "chunk_size": 1000,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "| \\`end\\_date\\_time\\` | \\`int \\(epoch in ms\\)\\` | No | Epoch in miliseconds format for eg : 1709251200000 | | \\`importance\\` | list of int | No | Filter by importance level\\`0->Important, 1->Optional\\`\\`2->Informational,\\` | | \\`is\\_recurring\\` | bool | No | True or False 0 -> False \\(One Time\\)1 \u2192 True \\(Recurring\\) | | \\`current\\_page\\` | \\`int\\` | No | Current page for pagination. Default will be 1 | | \\`page\\_size\\` | \\`int\\` | No | Number of results per page.Default Page Size will be 10 | \\`\\`\\` jsonMethod: **GET** Endpoint: **v1/calendar-events Description: Get list of calendar events. Response will be sorted by startDateTime in Asc Response: \\{ \"items\": \\[ \\{ \"id\": \"123e4567-e89b-12d3-a456-426614174000\", \"name\": \"Weekly Status Meeting\", \"startDateTime\": 1709251200000, \"endDateTime\": 1709251200000, \"importance\": 0, //0->Important, 1->Optional, 2->Informational \"isRecurring\": true, \"eventInstanceId\" : \"77e4567-e89b-12d3-a456-426614174000\", \"rRuleStr\" : \"DTSTART:20250605T000000 RRU",
          "similarity_score": 0.33663920843929107,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 48,
            "chunk_size": 1000,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "\"unit\": \"ppb or \u03bcg/m\u00b3\" \\}, \"methodDetectionLimit\": \\{ \"value\": 0.037, \"unit\": \"ppb or \u03bcg/m\u00b3\" \\}, \"methodType\": \"method\\_327\", \"compoundCode\": \"C2H4O\" \\} \\} \\} \\`\\`\\` **\n* * *\n# Calendar Events API Contract\n## 1\\. Get Calendar Events\n\\`\\`\\` Method: **GET** Endpoint: **/v1/calendar-events/old Description: Get calendar events based on the provided start and end date range. Request Params: start: int // The start time of the calendar events \\(epoch time in ms\\) end: int // The end time of the calendar events \\(epoch time in ms\\) Response: \\{ \"events\": \\[ \\{ \"id\": \"string\", // Unique identifier for the event \"title\": \"string\", // Title or name of the event \"type\": \"string\", // Type of the event \\(e.g., \"task\", \"reminder\"\\) \"date\": \"int\", // epoch timestamp of the event in milliseconds \\(e.g., \"1797049600000\"\\) \"priority\": \"string\" // Priority level \\(e.g., \"low\", \"medium\", \"high\"\\) \\} \\] \\} \\`\\`\\` **\n* * *\n# Alert Dashboard API Contract\n## 1\\.",
          "similarity_score": 0.32988483675219604,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 33,
            "chunk_size": 952,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "// for country \u2260 US, county in response will be null \"postalCode\": \"string\" \\} \\], \"contact\": \\[ \\{ \"id\": \"string\", \"firstName\": \"string\", \"lastName\": \"string\", \"contactNumber\": \"string\", \"emailAddress\": \"string\" \\} \\], \"status\": 1, //Number \\(0 -> not active, 1 -> active\\) \"logoUrl\": \"string\" //signed URL \\} Error Responses: Status 1\\. 400-Validation errors \\{ \"message\": \"Invalid email format.\" \\} 2\\. 415-Unsupported media type \\(file\\) \\{ \"message\": \"Only .png, .jpg, .jpeg allowed.\" \\} Validation Rules: 1\\. Email Validation 2\\. Phone Number Validation 3\\. File Validation\\(Supports only .png, .jpg, .jpeg formats\\) 4\\. Country should be a valid alpha-2 code. Refer API https://picarro.atlassian.net/wiki/spaces/FC/pages/3432448008/Tenant+Management+API+contracts\\#1.-Country-List \\`\\`\\` **\n## 2\\. Modify Tenants\n\\`\\`\\` Method: **PATCH** Endpoint: **v1/tenant/\\{tenantId\\} //requst body will have only the modifed one Request Body: \\{ \"name\": \"string\", //optional \"address\": \\[ \\{ \"id\": \"strin",
          "similarity_score": 0.30341753777457847,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 2,
            "chunk_size": 1000,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        }
      ],
      "isTyping": false
    },
    {
      "id": "1754073346017",
      "content": "Please explain this API",
      "role": "user",
      "timestamp": "2025-08-01 18:35:46.017000+00:00",
      "sources": null,
      "isTyping": false
    },
    {
      "id": "1754073355454",
      "content": "Based on the provided context:\n\n* The endpoint is a GET request to /v1/timezones.\n* The API response should include the timezone name with its abbreviation.\n* Abbreviations are not standardized and may lead to ambiguity.\n* The response will be sorted by country names.\n* The response includes all ISO 3166-1 countries.",
      "role": "assistant",
      "timestamp": "2025-08-01 18:35:55.453000+00:00",
      "sources": [
        {
          "content": "arameters: None Response: \\[ \\{ \"code\": \"US\", \"name\": \"United States\" \\}, \\{ \"code\": \"IN\", \"name\": \"India\" \\}, \\{ \"code\": \"DE\", \"name\": \"Germany\" \\} // ... all ISO 3166-1 countries \\] \\`\\`\\` **\n## 2\\. Timezone List\n * The API response should include the timezone **name** with its **abbreviation**.\n * **Note:** Abbreviations are not standardized and may lead to ambiguity. \nFor example:\n * \\`Asia/Kolkata\\` and \\`Europe/Dublin\\` both use the abbreviation \\`IST\\`.\n * \\`Asia/Kuwait\\` has abbreviation \\`+03\\`.\n * Despite the potential ambiguity, these values will be included as requested\n * Link : <https://en.wikipedia.org/wiki/List_of_tz_database_time_zones>\n\n\\`\\`\\` Method: **GET** Endpoint: **/v1/timezones Description: Get the list of standard timezones \\(based on pytz\\). Query parameters: None Response: \\[ \\{ \"name\": \"Asia/Kolkata\", \"abbreviation\" : \"IST\" \\}, \\{ \"name\": \"America/New\\_York\", \"abbreviation\" : \"EDT\" \\}, \\{ \"name\": \"Europe/London\", \"abbreviation\" : \"BST\" \\}, \\{ \"name\": \"Ameri",
          "similarity_score": 0.701484849288778,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 42,
            "chunk_size": 1000,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "e Response: \\[ \\{ \"name\": \"Asia/Kolkata\", \"abbreviation\" : \"IST\" \\}, \\{ \"name\": \"America/New\\_York\", \"abbreviation\" : \"EDT\" \\}, \\{ \"name\": \"Europe/London\", \"abbreviation\" : \"BST\" \\}, \\{ \"name\": \"America/Araguaina\", \"abbreviation\": \"-03\" \\} // ... all pytz timezones \\] \\`\\`\\` **\n* * *\n# Calendar Events API\n## Recurrence Pattern Summary\n| Pattern Type | Key Parameters | Use Cases | | --- | --- | --- | | Daily | interval | Every day, every 2 days, etc. | | Weekly | interval\\`byWeekDay\\` | Weekly meetings, bi-weekly events on specific days | | Monthly | interval\\`byMonthDay\\` or \\`byWeekDay\\`\\`bySetPos\\` | Monthly reviews, first Monday of month | | Yearly | interval\\`byMonth\\`, \\`byMonthDay\\` or \\`byWeekDay\\`\\`bySetPos\\` | Anniversaries, annual events | \n## Parameters Reference\n| Parameter | Type | Description | Example | | --- | --- | --- | --- | | \\`type\\` | String | Recurrence frequency \\(daily, weekly, monthly, yearly\\) | \"weekly\" | | interval | Integer | How often the pattern repeats",
          "similarity_score": 0.47549080125480825,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 43,
            "chunk_size": 999,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "e Alert Configuration\n\\`\\`\\` jsonMethod: **PATCH** Endpoint: **/v1/alert-config/\\{alert\\_config\\_id\\} Request Body: \\{ \"alertThresholdPercentage\": \"float\", \"status\": \"int\" // 0 is disabled, 1 is enabled \\} Response: Successful Update \\(200 OK\\) \\{ \"id\": \"abc123\", //alert config uuid \"message\": \"Alert Config updated successfully.\" \\} Error Handling: 400 Bad Request: Invalid input data. 404 Not Found: Alert configuration not found. 500 Internal Server Error: Internal Server Error \\`\\`\\` **\n# Country and Timezone API Contract\n## 1\\. Country List\n\\`\\`\\` jsonMethod: **GET** Endpoint: **/v1/countries Description: Get the list of ISO standard country codes and names. The response is sorted by country names. Query parameters: None Response: \\[ \\{ \"code\": \"US\", \"name\": \"United States\" \\}, \\{ \"code\": \"IN\", \"name\": \"India\" \\}, \\{ \"code\": \"DE\", \"name\": \"Germany\" \\} // ... all ISO 3166-1 countries \\] \\`\\`\\` **\n## 2\\.",
          "similarity_score": 0.47025383467065773,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 41,
            "chunk_size": 917,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "| \\`end\\_date\\_time\\` | \\`int \\(epoch in ms\\)\\` | No | Epoch in miliseconds format for eg : 1709251200000 | | \\`importance\\` | list of int | No | Filter by importance level\\`0->Important, 1->Optional\\`\\`2->Informational,\\` | | \\`is\\_recurring\\` | bool | No | True or False 0 -> False \\(One Time\\)1 \u2192 True \\(Recurring\\) | | \\`current\\_page\\` | \\`int\\` | No | Current page for pagination. Default will be 1 | | \\`page\\_size\\` | \\`int\\` | No | Number of results per page.Default Page Size will be 10 | \\`\\`\\` jsonMethod: **GET** Endpoint: **v1/calendar-events Description: Get list of calendar events. Response will be sorted by startDateTime in Asc Response: \\{ \"items\": \\[ \\{ \"id\": \"123e4567-e89b-12d3-a456-426614174000\", \"name\": \"Weekly Status Meeting\", \"startDateTime\": 1709251200000, \"endDateTime\": 1709251200000, \"importance\": 0, //0->Important, 1->Optional, 2->Informational \"isRecurring\": true, \"eventInstanceId\" : \"77e4567-e89b-12d3-a456-426614174000\", \"rRuleStr\" : \"DTSTART:20250605T000000 RRU",
          "similarity_score": 0.4384854509044478,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 48,
            "chunk_size": 1000,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "ring\" \\} Response: Status: 201 Created \\{ \"id\": \"uuid string\", \"name\": \"string\", \"createdDate\": \"date\", //epoch in milliseconds \"updatedDate\": \"date\", //epoch in milliseconds \"description\": \"string\", \"hardwareSerialNo\": \"string\", \"siteProgramId\": \"uuid string\", \"latitude\": \"string\", // datatype yet to decide? \"longitude\": \"string\", \"monitoringSystemTypeId\": \"uuid string\", \"status\": 1 // 0 -> not active, 1 -> active \\} \\`\\`\\` **\n## 2\\. Get all Monitoring Systems\nUse the Get single Site API to get all monitoring systems for a Site. There is no pagination for this API.\n## 3\\. Get a Single Monitoring System\n\\`\\`\\` Method: **GET** Endpoint: **/v1/monitoring-system/\\{monitoring-system-id\\} Response: Status: 200 OK \\{ \"id\": \"uuid string\", \"name\": \"string\", \"createdDate\": \"date\", //epoch in milliseconds \"updatedDate\": \"date\", //epoch in milliseconds \"description\": \"string\", \"hardwareSerialNo\": \"string\", \"siteProgramId\": \"uuid string\", \"latitude\": \"string\", // datatype yet to decide? \"longitude",
          "similarity_score": 0.42950930389548825,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 25,
            "chunk_size": 1000,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "minutes \n\n\\`\\`\\` none \\`\\`\\` \n## Overview\nThis document provides a detailed definition of the <http://Socket.IO> and API contract between the Active Monitoring Dashboard and the backend Relay Service. It outlines the communication protocols, data structures, and interactions that ensure seamless integration and data exchange between the frontend dashboard and the backend service, including the expected request and response formats, error handling mechanisms, and any specific rules governing the transmission of information.\n## API\n### **Get Latest Telemetry Info for Active Monitoring Dashboard**\nEndpoint: **\\`/v1/telemetry/latest\\`**\nMethod: \\`GET\\`\nDescription: Get Latest Telemetry Info for Active Monitoring Dashboard By Site Program Id\n**Parameters:**\n * \\`siteProgramId\\` \\(query parameter, required\\): \n * Type: UUID\n * Description: Unique identifiers of the site program.\n\n**Responses:**\n * **200 OK**\n * Content-Type: application/json\n\n**Schema:**\n\\`\\`\\` \\{ \"siteProgramId\": \"fd53de65-",
          "similarity_score": 0.4274265874452676,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 14,
            "chunk_size": 1000,
            "content_length": 16031,
            "created_date": "2025-07-25T13:08:52.035Z",
            "document_id": "confluence_3778248705",
            "is_chunk": true,
            "last_modified": "2025-07-25T13:53:04.384Z",
            "page_id": "3778248705",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3778248705",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Detaila about active monitoring",
            "version": "1"
          }
        },
        {
          "content": "updatedDate\": \"date\", //epoch in milliseconds \"status\": 1 //0 - non-active, 1-is active \\} \\`\\`\\` **\n## 4\\. Calendar Event Update API\n### 1\\. Update Calendar Event \nUpdates a calendar event's details. For recurring events, this updates the entire series. For converting a one-time event to recurring, include the \\`rRuleStr\\` field.\n\\`\\`\\` Method: **P**atch Endpoint: **/v1/calendar-events/\\{event\\_id\\} Request Body \\{ \"name\": \"Updated Meeting Name\", // Optional \"startDateTime\": 1709251200000, // Optional \"endDateTime\": 1709254800000, // Optional \"importance\": 0, // Optional \"rRuleStr\": \"DTSTART:20250605T000000\\nRRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=MO,WE,FR\" // Optional, include to convert to recurring \\} \\`\\`\\` **\n### Examples\n#### 1\\. Update a One-Time Event\n\\`\\`\\` \\{ \"name\": \"Updated One-Time Meeting\", \"startDateTime\": 1709251200000, \"endDateTime\": 1709254800000 \\} \\`\\`\\` \n#### 2\\. Update an Entire Recurring Series\n\\`\\`\\` \\{ \"name\": \"Weekly Team Standup\", \"rRuleStr\": \"DTSTART:20250605T00",
          "similarity_score": 0.4219964227486461,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 55,
            "chunk_size": 1000,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "econds \"updatedDate\": \"date\", //epoch in milliseconds \"description\": \"string\", \"hardwareSerialNo\": \"string\", \"siteProgramId\": \"uuid string\", \"latitude\": \"string\", // datatype yet to decide? \"longitude\": \"string\", \"monitoringSystemTypeId\": \"uuid string\", \"status\": 1 // 0 -> not active, 1 -> active \\} \\`\\`\\` **\n## 4\\. Modify a Monitoring System\n\\`\\`\\` Method: **PATCH** Endpoint: **/v1/monitoring-system/\\{monitoring-system-id\\} //requst body will have only the modifed field Request Body: \\{ \"name\": \"string\", \"description\": \"string\", \"hardwareSerialNo\": \"string\", \"latitude\": \"string\", // datatype yet to decide? \"longitude\": \"string\" \\} Response: Successful Update \\(200 OK\\) \\{ \"id\": \"abc123\", //site id \"message\": \"Monitoring System updated successfully.\" \\} \\`\\`\\` **\n## 5\\. Delete Monitoring system\n\\`\\`\\` Method: **DELETE** Endpoint: **/v1/monitoring-system/\\{monitoring-system-id\\} Response: Status: 200 OK \\{ \"id\": \"string\", \"message\": \"Monitoring System deleted successfully.",
          "similarity_score": 0.38718079748586365,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 26,
            "chunk_size": 986,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "\"unit\": \"ppb or \u03bcg/m\u00b3\" \\}, \"methodDetectionLimit\": \\{ \"value\": 0.037, \"unit\": \"ppb or \u03bcg/m\u00b3\" \\}, \"methodType\": \"method\\_327\", \"compoundCode\": \"C2H4O\" \\} \\} \\} \\`\\`\\` **\n* * *\n# Calendar Events API Contract\n## 1\\. Get Calendar Events\n\\`\\`\\` Method: **GET** Endpoint: **/v1/calendar-events/old Description: Get calendar events based on the provided start and end date range. Request Params: start: int // The start time of the calendar events \\(epoch time in ms\\) end: int // The end time of the calendar events \\(epoch time in ms\\) Response: \\{ \"events\": \\[ \\{ \"id\": \"string\", // Unique identifier for the event \"title\": \"string\", // Title or name of the event \"type\": \"string\", // Type of the event \\(e.g., \"task\", \"reminder\"\\) \"date\": \"int\", // epoch timestamp of the event in milliseconds \\(e.g., \"1797049600000\"\\) \"priority\": \"string\" // Priority level \\(e.g., \"low\", \"medium\", \"high\"\\) \\} \\] \\} \\`\\`\\` **\n* * *\n# Alert Dashboard API Contract\n## 1\\.",
          "similarity_score": 0.3820218573510292,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 33,
            "chunk_size": 952,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        },
        {
          "content": "ite/\\{siteId\\} //requst body will have only the modifed one Request Body: \\{ \"name\": \"string\", //optional \"status\": 1, //optional \"address\": \\[ //optional \\{ \"id\": \"uuid string\", // UUID //if any address fields are modified Id is mandatory to send and if no Id is provided then a new address will be added for that site. \"name\": \"string\", \"addressLine1\": \"string\", \"addressLine2\": \"string\", \"city\": \"string\", \"state\": \"string\", \"country\": \"string\", \"county\" : \"string\", \"postalCode\": \"string\" \\} \\], \"contact\": \\[ //optional \\{ \"id\": \"uuid string\", // UUID //if any contact fields are modified Id is mandatory to send and if no Id is provided then a new contact will be added for that site. \"firstName\": \"string\", \"lastName\": \"string\", \"contactNumber\": \"string\", \"emailAddress\": \"string\" \\} \\], \"gisBoundary\": \\{\\}, //optional \"timezone\" : \"string\", //optional \"stateFacilityIdentifier\" : \"string\", //optional \"siteProgram\": \\[ //optional \\{ \"id\": \"uuid string\", \"startDate\": \"epoch\", \"data\": \\{ //se",
          "similarity_score": 0.36799974887498177,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 22,
            "chunk_size": 1000,
            "content_length": 53185,
            "created_date": "2025-07-24T17:46:21.134Z",
            "document_id": "confluence_3776741377",
            "is_chunk": true,
            "last_modified": "2025-07-28T14:20:46.086Z",
            "page_id": "3776741377",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3776741377",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Duplicate of Tenant Management API contracts",
            "version": "2"
          }
        }
      ],
      "isTyping": false
    },
    {
      "id": "1754073410423",
      "content": "what is purpose of heartbeat in active Monitoring",
      "role": "user",
      "timestamp": "2025-08-01 18:36:50.423000+00:00",
      "sources": null,
      "isTyping": false
    },
    {
      "id": "1754073417671",
      "content": "The documentation does not provide information about the purpose of heartbeat in active monitoring related to the endpoint /v1/timezones.",
      "role": "assistant",
      "timestamp": "2025-08-01 18:36:57.670000+00:00",
      "sources": [
        {
          "content": "space Event Name: ms\\_heartbeat\\_state //this should return heartbeat data for a monitoring system Response Structure: \\{ \"result\": \\{ \"time\": 19234942324, //Epoch Time \"siteProgramId\": 3212-2313-3112-2332, \"monitoringSystemId\": \"8395-9274-8373-0274\", // Id of the monitoring system which sent this heartbeat \"state\": 0 //0 - Not Connected | 1 - Connected \\} \\} \\`\\`\\` \n### Web Socket Data format for Monitoring System Operational Status\n\\`\\`\\` Method: **W**ebSocket Namespace: active-monitoring-namespace Event Name: ms\\_operational\\_state //this should return heartbeat data for a monitoring system Response Structure: \\{ \"result\": \\{ \"time\": 19234942324, //Epoch Time \"siteProgramId\": 3212-2313-3112-2332, \"monitoringSystemId\": \"8395-9274-8373-0274\", // Id of the monitoring system which sent this heartbeat \"state\": 4 // 0 = \"UNINITIALIZED\" | 1 = \"INITIALIZING\" | 2 = \"OK\" | 3 = \"MAINTENANCE\" | 4 = \"CRITICAL\" \\} \\} \\`\\`\\` \n### Web Socket Data format for Wind Data\n\\`\\`\\` Method: **W**ebSocket Na",
          "similarity_score": 0.5120821677030022,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 19,
            "chunk_size": 1000,
            "content_length": 16031,
            "created_date": "2025-07-25T13:08:52.035Z",
            "document_id": "confluence_3778248705",
            "is_chunk": true,
            "last_modified": "2025-07-25T13:53:04.384Z",
            "page_id": "3778248705",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3778248705",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Detaila about active monitoring",
            "version": "1"
          }
        },
        {
          "content": "heartbeat \"state\": 4 // 0 = \"UNINITIALIZED\" | 1 = \"INITIALIZING\" | 2 = \"OK\" | 3 = \"MAINTENANCE\" | 4 = \"CRITICAL\" \\} \\} \\`\\`\\` \n### Web Socket Data format for Wind Data\n\\`\\`\\` Method: **W**ebSocket Namespace: active-monitoring-namespace Event Name: rt\\_wind\\_data //this should return real time wind data Response Structure: \\{ \"result\": \\{ \"time\": 19234942324, //Epoch Time \"siteProgramId\": 3212-2313-3112-2332, \"monitoringSystemId\": \"8395-9274-8373-0274\", // Id of the monitoring system which sent this heartbeat \"windSpeed\": 140.32, // float \"windDirection\": 245 // int \\} \\} \\`\\`\\`",
          "similarity_score": 0.5052310051680484,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 20,
            "chunk_size": 584,
            "content_length": 16031,
            "created_date": "2025-07-25T13:08:52.035Z",
            "document_id": "confluence_3778248705",
            "is_chunk": true,
            "last_modified": "2025-07-25T13:53:04.384Z",
            "page_id": "3778248705",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3778248705",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Detaila about active monitoring",
            "version": "1"
          }
        },
        {
          "content": "minutes \n\n\\`\\`\\` none \\`\\`\\` \n## Overview\nThis document provides a detailed definition of the <http://Socket.IO> and API contract between the Active Monitoring Dashboard and the backend Relay Service. It outlines the communication protocols, data structures, and interactions that ensure seamless integration and data exchange between the frontend dashboard and the backend service, including the expected request and response formats, error handling mechanisms, and any specific rules governing the transmission of information.\n## API\n### **Get Latest Telemetry Info for Active Monitoring Dashboard**\nEndpoint: **\\`/v1/telemetry/latest\\`**\nMethod: \\`GET\\`\nDescription: Get Latest Telemetry Info for Active Monitoring Dashboard By Site Program Id\n**Parameters:**\n * \\`siteProgramId\\` \\(query parameter, required\\): \n * Type: UUID\n * Description: Unique identifiers of the site program.\n\n**Responses:**\n * **200 OK**\n * Content-Type: application/json\n\n**Schema:**\n\\`\\`\\` \\{ \"siteProgramId\": \"fd53de65-",
          "similarity_score": 0.4904716978243626,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 14,
            "chunk_size": 1000,
            "content_length": 16031,
            "created_date": "2025-07-25T13:08:52.035Z",
            "document_id": "confluence_3778248705",
            "is_chunk": true,
            "last_modified": "2025-07-25T13:53:04.384Z",
            "page_id": "3778248705",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3778248705",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Detaila about active monitoring",
            "version": "1"
          }
        },
        {
          "content": "e5a-389238efbdd0\": \\{ \"operationalStatus\": \\{ \"monitoringSystemId\": \"837039ee-19ad-45c9-ae5a-389238efbdd0\", \"time\": \"1746081455375\", \"state\": 2,//0=\"UNINITIALIZED\"|1=\"INITIALIZING\"|2=\"OK\"|3=\"MAINTENANCE\"|4=\"CRITICAL\" \"siteProgramId\": \"fd53de65-3fb0-4c12-aacc-9f78a164a7f2\" \\}, \"heartbeat\": \\{ \"monitoringSystemId\": \"837039ee-19ad-45c9-ae5a-389238efbdd0\", \"time\": \"1746436030658\", \"state\": 0,//0-NotConnected|1-Connected \"siteProgramId\": \"fd53de65-3fb0-4c12-aacc-9f78a164a7f2\" \\} \\} \\} \\} \\`\\`\\` \n## Socket Connection\n### Steps to Establish socketio connection\nSteps to establish web socket connection and receive data for active monitoring dashboar:\n 1. Fetch socketio connection details\n 1. Frontend to request web socket connection details using '\\`/api/v1/webSocket\\`' path\n 2. Backend will send response as defined in the API specs\n 2. Establish socketio connection\n 1. Frontend will create \u2018socketio\u2019 connection\n 2. Backend will establish connection\n 3.",
          "similarity_score": 0.48502985096281037,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 16,
            "chunk_size": 958,
            "content_length": 16031,
            "created_date": "2025-07-25T13:08:52.035Z",
            "document_id": "confluence_3778248705",
            "is_chunk": true,
            "last_modified": "2025-07-25T13:53:04.384Z",
            "page_id": "3778248705",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3778248705",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Detaila about active monitoring",
            "version": "1"
          }
        },
        {
          "content": "ven if no heartbeat is received for 15 seconds, the system does not show a \"System Down\" status.\n 2. Expected Result: The system should display a \"System Down\" status if the heartbeat is not received.\n\n _Wind Data for Each Monitoring System_\n _Wind Data Not Updated Every 5 Seconds:_\n 1. Scenario: Wind speed and direction data are not updated every 5 seconds, and no \"Data not available\" message is shown.\n 2. Expected Result: The system should display \"Data not available\" to prevent showing stale data.\n\n_Missing Wind Data:_\n 1. Scenario: Wind data is completely unavailable, and the system does not show a \"Data not available\" message.\n 2. Expected Result: Missing wind data should trigger a \"Data not available\" message.\n\n_Visual Indicators_\n _Incorrect Visual Indicators for Alerts:_\n 1. Scenario: The system shows the wrong visual symbol or color for critical alerts, such as showing green instead of red for a gas exceedance.\n 2.",
          "similarity_score": 0.46870798760429344,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 7,
            "chunk_size": 937,
            "content_length": 16031,
            "created_date": "2025-07-25T13:08:52.035Z",
            "document_id": "confluence_3778248705",
            "is_chunk": true,
            "last_modified": "2025-07-25T13:53:04.384Z",
            "page_id": "3778248705",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3778248705",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Detaila about active monitoring",
            "version": "1"
          }
        },
        {
          "content": "1. Scenario: The system shows the wrong status, such as critical error when in maintenance.\n 2. Expected Result: The operational status should reflect the correct issue.\n\n_Delayed Status Update:_\n 1. Scenario: There is a delay in updating the status symbol when an operational issue is detected.\n 2. Expected Result: The status symbol should update in real-time.\n\n_Stale or Missing Operational Data:_\n 1. Scenario: Operational data is not updated every 5 seconds, and no \"Data not available\" message is shown.\n 2. Expected Result: The system should show \"Data not available\" to ensure no stale data is displayed.\n\n_Heartbeat / Connectivity Monitoring_\n _No \"System Down\" Status for Missing Heartbeat:_\n 1. Scenario: Even if no heartbeat is received for 15 seconds, the system does not show a \"System Down\" status.\n 2. Expected Result: The system should display a \"System Down\" status if the heartbeat is not received.",
          "similarity_score": 0.4595508576025156,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 6,
            "chunk_size": 917,
            "content_length": 16031,
            "created_date": "2025-07-25T13:08:52.035Z",
            "document_id": "confluence_3778248705",
            "is_chunk": true,
            "last_modified": "2025-07-25T13:53:04.384Z",
            "page_id": "3778248705",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3778248705",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Detaila about active monitoring",
            "version": "1"
          }
        },
        {
          "content": "/webSocket\\`' path\n 2. Backend will send response as defined in the API specs\n 2. Establish socketio connection\n 1. Frontend will create \u2018socketio\u2019 connection\n 2. Backend will establish connection\n 3. Establish namespace over socketio connection\n 1. Frontend will get namespace socketio connection for '\\`active-monitoring-namespace\\`'\n 4. Initiate data receiving using the namespace socketio conneciton\n 1. Frontend will send \u2018\\`start\\_active\\_monitoring\\`\u2019 event with below payload\n\n\\`\\`\\` \\{ \"siteProgramId\" : \\} \\`\\`\\` \n 5. Disconnect namespace socketio connection\n 1. Frontend will disconnect namespace socketio connection when it no longer needs the data\n\n### Web Socket Data format for Active Monitoring Dashboard\n\\`\\`\\` Method: **W**ebSocket Namespace: active-monitoring-namespace Event Name: rt\\_processed\\_conc\\_data //this should return single data from a monitoring system Response Structure: \\{ \"result\": \\{ \"time\": 19234942324, \"siteProgramId\": \"3212-2313-3112-2332\", \"monitoringSystemI",
          "similarity_score": 0.4586103189038063,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 17,
            "chunk_size": 1000,
            "content_length": 16031,
            "created_date": "2025-07-25T13:08:52.035Z",
            "document_id": "confluence_3778248705",
            "is_chunk": true,
            "last_modified": "2025-07-25T13:53:04.384Z",
            "page_id": "3778248705",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3778248705",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Detaila about active monitoring",
            "version": "1"
          }
        },
        {
          "content": "rt\\_processed\\_conc\\_data //this should return single data from a monitoring system Response Structure: \\{ \"result\": \\{ \"time\": 19234942324, \"siteProgramId\": \"3212-2313-3112-2332\", \"monitoringSystemId\": \"8395-9274-8373-0274\", \"concentrations\": \\[ \\{ \"cid\": 533454343, \"concentration\": 1.0407, \"thresholdStatus\": 1, \"unit\": \"ppb\" \\}, \\{ \"cid\": 533454343, \"concentration\": 1.0407, \"thresholdStatus\": 1, \"unit\": \"ppb\" \\} \\], \"windPolygon\": \\{ \"type\": \"Polygon\", \"coordinates\": \\[ \\[ \\[-93.28142206235546, 30.246724860133316\\], \\[-93.28142163075195, 30.246724802598017\\], \\[-93.28142228782423, 30.246724885992023\\], \\[-93.28142206235546, 30.246724860133316\\] \\] \\] \\} \\} \\} \\`\\`\\` \n### Web Socket Data format for Monitoring System Heartbeat\n\\`\\`\\` Method: **W**ebSocket Namespace: active-monitoring-namespace Event Name: ms\\_heartbeat\\_state //this should return heartbeat data for a monitoring system Response Structure: \\{ \"result\": \\{ \"time\": 19234942324, //Epoch Time \"siteProgramId\": 3212-2313-3112",
          "similarity_score": 0.43728688397597093,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 18,
            "chunk_size": 999,
            "content_length": 16031,
            "created_date": "2025-07-25T13:08:52.035Z",
            "document_id": "confluence_3778248705",
            "is_chunk": true,
            "last_modified": "2025-07-25T13:53:04.384Z",
            "page_id": "3778248705",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3778248705",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Detaila about active monitoring",
            "version": "1"
          }
        },
        {
          "content": "de 51\\)\n 3. Move the go-live and live next to bean bar timeline on the right\n 4. Below the bar include an axis and every 12 bars in between the 12th and 13th bar - there should be a vertical line.\n 5. Below the axis line show the time interval selected\n 6. Please refer slide 52 in this presentation - [cloud-fenceline - presentation](https://www.figma.com/proto/inJKuHGy5HNdYKygtA8HpB/cloud-fenceline?node-id=2679-62742)\n 7. New date period selection - Last 24 hours, Last 90 Days, Custom - Refer figma - [cloud-fenceline - presentation](https://www.figma.com/proto/inJKuHGy5HNdYKygtA8HpB/cloud-fenceline?node-id=2679-63112)\n 8. Show bean bars bigger for averages that are bigger \\(14 days > 24 hours > 1 hour > 30 minutes > 15 minutes \n\n\\`\\`\\` none \\`\\`\\` \n## Overview\nThis document provides a detailed definition of the <http://Socket.IO> and API contract between the Active Monitoring Dashboard and the backend Relay Service.",
          "similarity_score": 0.40665711497725887,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 13,
            "chunk_size": 929,
            "content_length": 16031,
            "created_date": "2025-07-25T13:08:52.035Z",
            "document_id": "confluence_3778248705",
            "is_chunk": true,
            "last_modified": "2025-07-25T13:53:04.384Z",
            "page_id": "3778248705",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3778248705",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Detaila about active monitoring",
            "version": "1"
          }
        },
        {
          "content": "to quickly identify systems requiring corrective action. \n * **Detailed System Insights:** Users can click to view a pop-up displaying detailed gas concentration levels and status, operational health, anemometer data.\n * **Operational Status:** Monitoring systems with operational issues display a health Status symbol, providing real-time operational status updates.\n * **Heartbeat Monitoring:** Each system verifies connectivity with a heartbeat signal every 15 seconds. If no heartbeat is received, the system triggers an alert, displays a \"System Down\" icon and the popup cannot be accessed\n * **Wind Data specific to the system:** Each system displays wind speed and direction data specific to the system, updated every 5 seconds, allowing users to assess specific environmental conditions and their impact on individual systems.\n * **Visual Indicators:** All critical alerts and statuses \\(gas exceedances, operational issues, system down\\) are represented with intuitive visual symbols and co",
          "similarity_score": 0.36040429543356556,
          "metadata": {
            "author": "Praveen kumar",
            "chunk_count": 0,
            "chunk_index": 1,
            "chunk_size": 999,
            "content_length": 16031,
            "created_date": "2025-07-25T13:08:52.035Z",
            "document_id": "confluence_3778248705",
            "is_chunk": true,
            "last_modified": "2025-07-25T13:53:04.384Z",
            "page_id": "3778248705",
            "page_url": "https://picarro.atlassian.net/wiki/pages/viewpage.action?pageId=3778248705",
            "parent_id": "",
            "space_key": "FenceLineD",
            "space_name": "FenceLineDemoSpace",
            "status": "current",
            "tags": "",
            "title": "Detaila about active monitoring",
            "version": "1"
          }
        }
      ],
      "isTyping": false
    }
  ],
  "created_at": "2025-08-01 18:46:48.388888",
  "updated_at": "2025-08-01 18:46:48.388888",
  "user_id": null,
  "metadata": {}
}